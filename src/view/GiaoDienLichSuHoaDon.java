package view;

import connection.LoadData;
import java.awt.Cursor;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.text.SimpleDateFormat;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import model.ChuyenBay;
import model.Ghe;
import model.HoaDon;
import model.KhachHang;
import model.Ve;

/**
 *
 * @author tuanbuiquoc
 */
public class GiaoDienLichSuHoaDon extends javax.swing.JFrame {

    /**
     * Creates new form GiaoDienLichSuHoaDon
     */
    DefaultTableModel dtmHoaDon = null;
    DefaultTableModel dtmVe = null;

    public GiaoDienLichSuHoaDon() {
        initComponents();
        jButton_XoaVe.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        jButton_XoaHoaDon.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        jButton_ThoatGiaoDienXemLichSu.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        jButton_SuaDiemTichLuyDaDung.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        dtmHoaDon = (DefaultTableModel) jTable_HoaDon.getModel();
        dtmHoaDon.setColumnIdentifiers(new Object[]{
            "Mã HĐ", "SĐT KH", "Ngày Xuất", "Thanh Toán", "Tổng", "SĐT NV"
        });
        hienThongTinVaoBangHoaDon();

        dtmVe = (DefaultTableModel) jTable_VeDaChon.getModel();
        dtmVe.setColumnIdentifiers(new Object[]{
            "Mã Vé", "Mã CB", "Giá", "Ký Gửi",
            "CMND Người Bay", "Tên Người Bay", "Ngày Sinh", "Mã HĐ", "Mã Ghế"
        });

        this.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                int confirmed = JOptionPane.showConfirmDialog(null,
                        "Bạn có chắc muốn thoát chương trình không?", "Xác nhận",
                        JOptionPane.YES_NO_OPTION);

                if (confirmed == JOptionPane.YES_OPTION) {
                    dispose();
                }
            }
        });
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel_IconMayBay = new javax.swing.JLabel();
        jLabel_HPT = new javax.swing.JLabel();
        jLabel_AirLines = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_HoaDon = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column){
                return false;
            }};
            jLabel_HoaDon = new javax.swing.JLabel();
            jSeparator1 = new javax.swing.JSeparator();
            jButton_ThoatGiaoDienXemLichSu = new javax.swing.JButton();
            jButton_SuaDiemTichLuyDaDung = new javax.swing.JButton();
            jButton_XoaHoaDon = new javax.swing.JButton();
            jLabel_BaoLoi = new javax.swing.JLabel();
            jPanel3 = new javax.swing.JPanel();
            jScrollPane2 = new javax.swing.JScrollPane();
            jTable_VeDaChon = new javax.swing.JTable(){
                public boolean isCellEditable(int row, int column){
                    return false;
                }};
                jLabel_VeDaChon = new javax.swing.JLabel();
                jSeparator2 = new javax.swing.JSeparator();
                jButton_XoaVe = new javax.swing.JButton();

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
                setTitle("Lịch sử hóa đơn");

                jPanel1.setBackground(new java.awt.Color(48, 57, 82));
                jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

                jLabel_IconMayBay.setForeground(new java.awt.Color(204, 255, 255));
                jLabel_IconMayBay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/icons8_airplane_48px_4.png"))); // NOI18N

                jLabel_HPT.setFont(new java.awt.Font("Roboto Mono Light", 1, 48)); // NOI18N
                jLabel_HPT.setForeground(new java.awt.Color(255, 255, 255));
                jLabel_HPT.setText("HPT");

                jLabel_AirLines.setFont(new java.awt.Font("Roboto Light", 1, 24)); // NOI18N
                jLabel_AirLines.setForeground(new java.awt.Color(255, 255, 255));
                jLabel_AirLines.setText("AIRLINES™");

                javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
                jPanel1.setLayout(jPanel1Layout);
                jPanel1Layout.setHorizontalGroup(
                    jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel_IconMayBay)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel_HPT)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_AirLines, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(1031, Short.MAX_VALUE))
                );
                jPanel1Layout.setVerticalGroup(
                    jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel_HPT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel_AirLines, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel_IconMayBay, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE))
                        .addContainerGap(22, Short.MAX_VALUE))
                );

                jPanel2.setBackground(new java.awt.Color(89, 98, 117));
                jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

                jTable_HoaDon.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
                jTable_HoaDon.setModel(new javax.swing.table.DefaultTableModel(
                    new Object [][] {

                    },
                    new String [] {
                        "Title 1", "Title 2", "Title 3", "Title 4"
                    }
                ));
                jTable_HoaDon.setRowHeight(30);
                jTable_HoaDon.setSelectionBackground(new java.awt.Color(255, 77, 77));
                jTable_HoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
                    public void mouseClicked(java.awt.event.MouseEvent evt) {
                        jTable_HoaDonMouseClicked(evt);
                    }
                });
                jScrollPane1.setViewportView(jTable_HoaDon);

                jLabel_HoaDon.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
                jLabel_HoaDon.setForeground(new java.awt.Color(255, 255, 255));
                jLabel_HoaDon.setText("Hóa đơn");

                jButton_ThoatGiaoDienXemLichSu.setBackground(new java.awt.Color(0, 102, 102));
                jButton_ThoatGiaoDienXemLichSu.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
                jButton_ThoatGiaoDienXemLichSu.setForeground(new java.awt.Color(255, 255, 255));
                jButton_ThoatGiaoDienXemLichSu.setText("Quay lại");
                jButton_ThoatGiaoDienXemLichSu.setBorderPainted(false);
                jButton_ThoatGiaoDienXemLichSu.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
                jButton_ThoatGiaoDienXemLichSu.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jButton_ThoatGiaoDienXemLichSuActionPerformed(evt);
                    }
                });

                jButton_SuaDiemTichLuyDaDung.setBackground(new java.awt.Color(0, 51, 51));
                jButton_SuaDiemTichLuyDaDung.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
                jButton_SuaDiemTichLuyDaDung.setForeground(new java.awt.Color(255, 255, 255));
                jButton_SuaDiemTichLuyDaDung.setText("Sửa điểm đã dùng");
                jButton_SuaDiemTichLuyDaDung.setBorderPainted(false);
                jButton_SuaDiemTichLuyDaDung.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
                jButton_SuaDiemTichLuyDaDung.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jButton_SuaDiemTichLuyDaDungActionPerformed(evt);
                    }
                });

                jButton_XoaHoaDon.setBackground(new java.awt.Color(255, 77, 77));
                jButton_XoaHoaDon.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
                jButton_XoaHoaDon.setForeground(new java.awt.Color(255, 255, 255));
                jButton_XoaHoaDon.setText("Xóa hóa đơn");
                jButton_XoaHoaDon.setBorderPainted(false);
                jButton_XoaHoaDon.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
                jButton_XoaHoaDon.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jButton_XoaHoaDonActionPerformed(evt);
                    }
                });

                jLabel_BaoLoi.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
                jLabel_BaoLoi.setForeground(new java.awt.Color(255, 255, 0));

                javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
                jPanel2.setLayout(jPanel2Layout);
                jPanel2Layout.setHorizontalGroup(
                    jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel_HoaDon)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jButton_ThoatGiaoDienXemLichSu, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton_SuaDiemTichLuyDaDung)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                                .addComponent(jButton_XoaHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel_BaoLoi, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                );
                jPanel2Layout.setVerticalGroup(
                    jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel_HoaDon)
                        .addGap(9, 9, 9)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel_BaoLoi, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton_ThoatGiaoDienXemLichSu, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton_XoaHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton_SuaDiemTichLuyDaDung, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                );

                jPanel3.setBackground(new java.awt.Color(89, 98, 117));
                jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));

                jTable_VeDaChon.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
                jTable_VeDaChon.setModel(new javax.swing.table.DefaultTableModel(
                    new Object [][] {

                    },
                    new String [] {
                        "Title 1", "Title 2", "Title 3", "Title 4"
                    }
                ));
                jTable_VeDaChon.setRowHeight(30);
                jTable_VeDaChon.setSelectionBackground(new java.awt.Color(255, 77, 77));
                jScrollPane2.setViewportView(jTable_VeDaChon);

                jLabel_VeDaChon.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
                jLabel_VeDaChon.setForeground(new java.awt.Color(255, 255, 255));
                jLabel_VeDaChon.setText("Vé đã chọn");

                jButton_XoaVe.setBackground(new java.awt.Color(225, 112, 85));
                jButton_XoaVe.setFont(new java.awt.Font("Roboto", 1, 16)); // NOI18N
                jButton_XoaVe.setForeground(new java.awt.Color(255, 255, 255));
                jButton_XoaVe.setText("Xóa vé");
                jButton_XoaVe.setBorderPainted(false);
                jButton_XoaVe.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
                jButton_XoaVe.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jButton_XoaVeActionPerformed(evt);
                    }
                });

                javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
                jPanel3.setLayout(jPanel3Layout);
                jPanel3Layout.setHorizontalGroup(
                    jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 806, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton_XoaVe)
                                    .addComponent(jLabel_VeDaChon))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                );
                jPanel3Layout.setVerticalGroup(
                    jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel_VeDaChon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                        .addComponent(jButton_XoaVe, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                );

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(514, 514, 514)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                );
                layout.setVerticalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                );

                pack();
            }// </editor-fold>//GEN-END:initComponents

    private void hienThongTinVaoBangHoaDon() {
        //load laiThongTin
        new LoadData();
        dtmHoaDon.setRowCount(0);
        for (KhachHang kh : controller.Controller.arrayListKhachHang) {
            if (kh.getSdtKhachHang().equals(controller.Controller.tk.getSdt())) {
                for (HoaDon hd : controller.Controller.arrayListHoaDon) {
                    if (hd.getSdtKhachHang().equals(kh.getSdtKhachHang())) {
                        dtmHoaDon.addRow(new Object[]{
                            hd.getMaHoaDon(), hd.getSdtKhachHang(), new SimpleDateFormat("dd/MM/yyyy").format(hd.getNgayXuatHoaDon()), hd.getTrangThaiThanhToan(),
                            hd.getTongTien(), hd.getSdtNhanVien()
                        });
                    }

                }
                break;
            }
        }
    }

    private void jButton_ThoatGiaoDienXemLichSuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ThoatGiaoDienXemLichSuActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new GiaoDienThongTinKhachHang().setVisible(true);
    }//GEN-LAST:event_jButton_ThoatGiaoDienXemLichSuActionPerformed

    private void jButton_XoaVeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_XoaVeActionPerformed
        // TODO add your handling code here:
        int row = jTable_VeDaChon.getSelectedRow();
        int rowHoaDon = jTable_HoaDon.getSelectedRow();

        if (row == -1) {

        } else {
            if (rowHoaDon == -1) {
                JOptionPane.showMessageDialog(rootPane, "Hãy chọn hóa đơn trước");
            } else {

                String maHoaDon = (String) jTable_HoaDon.getValueAt(rowHoaDon, 0);
                String sdtKhachHang = (String) jTable_HoaDon.getValueAt(rowHoaDon, 1);
                String maVe = (String) jTable_VeDaChon.getValueAt(row, 0);
                String maGhe = (String) jTable_VeDaChon.getValueAt(row, 8);

                System.out.println(maGhe + ": ");

                String hangGheCuaVeDaChon = "";
                int giaCoBan = 0;
                int soVePhoThong = 0;
                int soVeThuongGia = 0;

                new LoadData();
                int index = -1;
                byte trangThaiThanhToan = 0;
                // xem hoa don da thanh toan hay chua
                for (HoaDon hd : controller.Controller.arrayListHoaDon) {
                    if (hd.getMaHoaDon().equals(maHoaDon)) {
                        trangThaiThanhToan = hd.getTrangThaiThanhToan();
                    }
                }

                if (trangThaiThanhToan == 1) {
                    jLabel_BaoLoi.setText("*Hóa đơn đã thanh toán, không thể xóa");
                } else {
                    //tính giá cơ bản của các vé trong hóa đơn
                    jLabel_BaoLoi.setText("");
                    for (Ve v : controller.Controller.arrayListVe) {

                        if (maVe.equals(v.getMaVe()) && v.getMaHoaDon().equals(maHoaDon)) {

                            for (ChuyenBay cb : controller.Controller.arrayListChuyenBay) {
                                if (v.getMaChuyenBay().equals(cb.getMaChuyenBay())) {
                                    index = controller.Controller.arrayListChuyenBay.indexOf(cb);
                                    giaCoBan = cb.getKhoangCach() * 500;
                                    break;
                                }
                            }
                        }
                    }
                    //
                    // tìm số ghế phổ thông, thương gia trong hóa đơn đã chọn
                    for (Ve v : controller.Controller.arrayListVe) {
                        if (v.getMaHoaDon().equals(maHoaDon)) {
                            for (Ghe g : controller.Controller.arrayListChuyenBay.get(index).getArrayListGhe()) {
                                if (maGhe.equals(g.getMaGhe())) {// tìm luôn hạng ghế của vé đã chọn
                                    if (g.getLoaiGhe().equalsIgnoreCase("PhoThong")) {
                                        hangGheCuaVeDaChon = "PhoThong";
                                    }
                                    if (g.getLoaiGhe().equalsIgnoreCase("ThuongGia")) {
                                        hangGheCuaVeDaChon = "ThuongGia";
                                    }
                                }
                                if (v.getMaGhe().equals(g.getMaGhe())) {
                                    if (g.getLoaiGhe().equalsIgnoreCase("PhoThong")) {
                                        soVePhoThong++;
                                    }
                                    if (g.getLoaiGhe().equalsIgnoreCase("ThuongGia")) {
                                        soVeThuongGia++;
                                    }
                                }
                            }
                        }
                    }
                    //
                    //từ các bước trên suy ra được điểm đã dùng, giá gốc, giá sau khi dùng,...
                    System.out.println("hạng ghế của vé đã chọn:" + hangGheCuaVeDaChon);
                    System.out.println("PhoThong" + soVePhoThong + "THuongGia" + soVeThuongGia);
                    int tongTienThucTe = (int) jTable_HoaDon.getValueAt(rowHoaDon, 4);
                    System.out.println("tong tien thuc te: " + tongTienThucTe);
                    int tongTienGoc = soVePhoThong * giaCoBan + soVeThuongGia * giaCoBan * GiaoDienHoaDonMotChieu.phanTramGiaThuongGia;
                    System.out.println("tong tien goc: " + tongTienGoc);
                    int diemTichLuyKhachDaDung = (tongTienGoc * 1000 - tongTienThucTe * 1000) / tongTienGoc;
                    System.out.println("diem da dung: " + diemTichLuyKhachDaDung);
                    int diemTichLuyHienTaiCuaKhachHang = 0;
                    // lấy điểm tích lũy hiện tại của khách hàng
                    for (KhachHang kh : controller.Controller.arrayListKhachHang) {
                        if (sdtKhachHang.equals(kh.getSdtKhachHang())) {
                            diemTichLuyHienTaiCuaKhachHang = kh.getDiemTichLuy();
                            break;
                        }
                    }

                    System.out.println("diem còn lại của khách " + diemTichLuyHienTaiCuaKhachHang);
                    int diemTichLuySauXoa = 0;
                    int tongTienSauXoa = 0;

                    if (hangGheCuaVeDaChon.equalsIgnoreCase("PhoThong")) {
                        tongTienSauXoa = ((soVePhoThong - 1) * giaCoBan + soVeThuongGia * giaCoBan * GiaoDienHoaDonMotChieu.phanTramGiaThuongGia)
                                - ((soVePhoThong - 1) * giaCoBan + soVeThuongGia * giaCoBan * GiaoDienHoaDonMotChieu.phanTramGiaThuongGia) * diemTichLuyKhachDaDung / 1000;
                        diemTichLuySauXoa = diemTichLuyHienTaiCuaKhachHang;
                        System.out.println("Tong tiền sau Xóa=" + tongTienSauXoa);
                        System.out.println("điểm tích lũy sau xóa" + diemTichLuySauXoa);
                    }
                    if (hangGheCuaVeDaChon.equalsIgnoreCase("ThuongGia")) {
                        tongTienSauXoa = (soVePhoThong * giaCoBan + (soVeThuongGia - 1) * giaCoBan * GiaoDienHoaDonMotChieu.phanTramGiaThuongGia)
                                - (soVePhoThong * giaCoBan + (soVeThuongGia - 1) * giaCoBan * GiaoDienHoaDonMotChieu.phanTramGiaThuongGia) * diemTichLuyKhachDaDung / 1000;
                        System.out.println("Tong tiền sau Xóa=" + tongTienSauXoa);
                        diemTichLuySauXoa = diemTichLuyHienTaiCuaKhachHang;
                        System.out.println("điểm tích lũy sau xóa (chưa tính nếu sau khi xóa thì không còn vé nào)" + diemTichLuySauXoa);
                    }
                    if (tongTienSauXoa == 0) {
                        diemTichLuySauXoa = diemTichLuySauXoa + diemTichLuyKhachDaDung;
                        System.out.println("Điểm sau khi xóa hết vé trong hóa đơn: " + diemTichLuySauXoa);
                    }
                    int luaChon = JOptionPane.showConfirmDialog(rootPane, "Xóa vé " + maVe + " trong hóa đơn đã chọn?", "Xác nhận", JOptionPane.OK_CANCEL_OPTION);
                    if (luaChon == JOptionPane.OK_OPTION) {

                        if (connection.UpdateData.updateGhe(maGhe, (byte) 1)) {// chuyển ghế thành trạng thái còn trống
                            if (controller.Controller.veCoTheXoaHayKhong(maHoaDon, maVe)) {// xem ve co the xoa hay khong
                                if (connection.UpdateData.deleteVe(maVe, maHoaDon)) {
                                    if (tongTienSauXoa == 0) {
                                        if (connection.UpdateData.deleteHoaDon(maHoaDon)) {
                                            if (connection.UpdateData.updateDiemTichLuyKhachHang(sdtKhachHang, diemTichLuySauXoa)) {
                                                JOptionPane.showMessageDialog(rootPane, "Xóa vé thành công");

                                                hienThongTinVaoBangHoaDon();

                                                dtmVe.setRowCount(0);
                                                for (Ve v : controller.Controller.arrayListVe) {
                                                    if (v.getMaHoaDon().equals(maHoaDon)) {
                                                        if (v.getNgaySinh() != null) {
                                                            dtmVe.addRow(new Object[]{
                                                                v.getMaVe(), v.getMaChuyenBay(), v.getGia(), v.getKyGui(),
                                                                v.getCmndNguoiBay(), v.getTenNguoiBay(), new SimpleDateFormat("dd/MM/yyyy").format(v.getNgaySinh()),
                                                                v.getMaHoaDon(), v.getMaGhe()
                                                            });
                                                        } else {
                                                            dtmVe.addRow(new Object[]{
                                                                v.getMaVe(), v.getMaChuyenBay(), v.getGia(), v.getKyGui(),
                                                                v.getCmndNguoiBay(), v.getTenNguoiBay(), "",
                                                                v.getMaHoaDon(), v.getMaGhe()
                                                            });
                                                        }
                                                    }
                                                }

                                            }
                                        }
                                    } else {
                                        if (connection.UpdateData.updateHoaDon(maHoaDon, tongTienSauXoa)) {
                                            if (connection.UpdateData.updateDiemTichLuyKhachHang(sdtKhachHang, diemTichLuySauXoa)) {
                                                JOptionPane.showMessageDialog(rootPane, "Xóa vé thành công");

                                                hienThongTinVaoBangHoaDon();

                                                dtmVe.setRowCount(0);
                                                for (Ve v : controller.Controller.arrayListVe) {
                                                    if (v.getMaHoaDon().equals(maHoaDon)) {
                                                        if (v.getNgaySinh() != null) {
                                                            dtmVe.addRow(new Object[]{
                                                                v.getMaVe(), v.getMaChuyenBay(), v.getGia(), v.getKyGui(),
                                                                v.getCmndNguoiBay(), v.getTenNguoiBay(), new SimpleDateFormat("dd/MM/yyyy").format(v.getNgaySinh()),
                                                                v.getMaHoaDon(), v.getMaGhe()
                                                            });
                                                        } else {
                                                            dtmVe.addRow(new Object[]{
                                                                v.getMaVe(), v.getMaChuyenBay(), v.getGia(), v.getKyGui(),
                                                                v.getCmndNguoiBay(), v.getTenNguoiBay(), "",
                                                                v.getMaHoaDon(), v.getMaGhe()
                                                            });
                                                        }
                                                    }
                                                }

                                            }
                                        }
                                    }
                                }
                            } else {
                                JOptionPane.showMessageDialog(rootPane, "Không thể xóa vì đây là vé người lớn duy nhất trong hóa đơn có trẻ em.");
                            }

                        }
                    }
                }
            }

        }
    }//GEN-LAST:event_jButton_XoaVeActionPerformed

    private void jTable_HoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_HoaDonMouseClicked
        // TODO add your handling code here:
        int row = jTable_HoaDon.getSelectedRow();
        if (row == -1) {
        } else {
            String maHoaDon = (String) jTable_HoaDon.getValueAt(row, 0);
            new LoadData();
            dtmVe.setRowCount(0);
            for (Ve v : controller.Controller.arrayListVe) {
                if (v.getMaHoaDon().equals(maHoaDon)) {
                    if (v.getNgaySinh() != null) {
                        dtmVe.addRow(new Object[]{
                            v.getMaVe(), v.getMaChuyenBay(), v.getGia(), v.getKyGui(),
                            v.getCmndNguoiBay(), v.getTenNguoiBay(), new SimpleDateFormat("dd/MM/yyyy").format(v.getNgaySinh()),
                            v.getMaHoaDon(), v.getMaGhe()
                        });
                    } else {
                        dtmVe.addRow(new Object[]{
                            v.getMaVe(), v.getMaChuyenBay(), v.getGia(), v.getKyGui(),
                            v.getCmndNguoiBay(), v.getTenNguoiBay(), "",
                            v.getMaHoaDon(), v.getMaGhe()
                        });
                    }
                }
            }
        }
    }//GEN-LAST:event_jTable_HoaDonMouseClicked

    private void jButton_SuaDiemTichLuyDaDungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_SuaDiemTichLuyDaDungActionPerformed
        // TODO add your handling code here:
        int rowHoaDon = jTable_HoaDon.getSelectedRow();

        if (rowHoaDon == -1) {
            jLabel_BaoLoi.setText("*Hãy chọn hóa đơn để chỉnh sửa");
        } else {
            jLabel_BaoLoi.setText("");
            String maHoaDon = (String) jTable_HoaDon.getValueAt(rowHoaDon, 0);
            String sdtKhachHang = (String) jTable_HoaDon.getValueAt(rowHoaDon, 1);
            String maVe = "";
            String hangGheCuaVeDaChon = "";
            int giaCoBan = 0;
            int soVePhoThong = 0;
            int soVeThuongGia = 0;
            new LoadData();
            int index = -1;

            byte trangThaiThanhToan = 0;
            // xem hoa don da thanh toan hay chua
            for (HoaDon hd : controller.Controller.arrayListHoaDon) {
                if (hd.getMaHoaDon().equals(maHoaDon)) {
                    trangThaiThanhToan = hd.getTrangThaiThanhToan();
                }
            }

            if (trangThaiThanhToan == 1) {
                jLabel_BaoLoi.setText("*Hóa đơn đã thanh toán, không thể chỉnh sửa");
            } else {
                jLabel_BaoLoi.setText("");
                for (Ve v : controller.Controller.arrayListVe) {
                    if (v.getMaHoaDon().equalsIgnoreCase(maHoaDon)) {
                        maVe = v.getMaVe();
                    }
                }

                // tính giá cơ bản
                for (Ve v : controller.Controller.arrayListVe) {

                    if (maVe.equals(v.getMaVe()) && v.getMaHoaDon().equals(maHoaDon)) {

                        for (ChuyenBay cb : controller.Controller.arrayListChuyenBay) {
                            if (v.getMaChuyenBay().equals(cb.getMaChuyenBay())) {
                                index = controller.Controller.arrayListChuyenBay.indexOf(cb);
                                giaCoBan = cb.getKhoangCach() * 500;
                                break;
                            }
                        }
                    }
                }
                System.out.println(index);
                //
                // tìm số ghế phổ thông, thương gia trong hóa đơn đã chọn
                for (Ve v : controller.Controller.arrayListVe) {
                    if (v.getMaHoaDon().equals(maHoaDon)) {
                        for (Ghe g : controller.Controller.arrayListChuyenBay.get(index).getArrayListGhe()) {
                            if (v.getMaGhe().equals(g.getMaGhe())) {
                                if (g.getLoaiGhe().equalsIgnoreCase("PhoThong")) {
                                    soVePhoThong++;
                                }
                                if (g.getLoaiGhe().equalsIgnoreCase("ThuongGia")) {
                                    soVeThuongGia++;
                                }
                            }
                        }
                    }
                }
                //
                //từ các bước trên suy ra được điểm đã dùng, giá gốc, giá sau khi dùng,...
                System.out.println("hạng ghế của vé đã chọn:" + hangGheCuaVeDaChon);
                System.out.println("PhoThong " + soVePhoThong + "THuongGia " + soVeThuongGia);
                int tongTienThucTe = (int) jTable_HoaDon.getValueAt(rowHoaDon, 4);
                System.out.println("tong tien thuc te: " + tongTienThucTe);
                int tongTienGoc = soVePhoThong * giaCoBan + soVeThuongGia * giaCoBan * GiaoDienHoaDonMotChieu.phanTramGiaThuongGia;
                System.out.println("tong tien goc: " + tongTienGoc);
                int diemTichLuyKhachDaDung = (tongTienGoc * 1000 - tongTienThucTe * 1000) / tongTienGoc;
                System.out.println("diem da dung: " + diemTichLuyKhachDaDung);
                int diemTichLuyHienTaiCuaKhachHang = 0;
                // lấy điểm tích lũy hiện tại của khách hàng
                for (KhachHang kh : controller.Controller.arrayListKhachHang) {
                    if (sdtKhachHang.equals(kh.getSdtKhachHang())) {
                        diemTichLuyHienTaiCuaKhachHang = kh.getDiemTichLuy();
                        break;
                    }
                }
                System.out.println("diem còn lại của khách " + diemTichLuyHienTaiCuaKhachHang);

                JTextField jTextField_DiemCuDaDung = new JTextField();
                jTextField_DiemCuDaDung.setText(diemTichLuyKhachDaDung + "");
                jTextField_DiemCuDaDung.setEnabled(false);

                JTextField jTextField_DiemConLai = new JTextField();
                jTextField_DiemConLai.setText(diemTichLuyHienTaiCuaKhachHang + "");
                jTextField_DiemConLai.setEnabled(false);
                //
                JComboBox jComboBox_DiemMoi = new JComboBox(new Object[]{"0", "100", "200", "300", "400", "500", "600", "700", "800", "900", "1000"});
                //        
                Object[] message = {
                    "Điểm cũ đã dùng:", jTextField_DiemCuDaDung,
                    "Điểm còn lại: ", jTextField_DiemConLai,
                    "Điểm mới muốn dùng:", jComboBox_DiemMoi
                };

                int luaChon = JOptionPane.showConfirmDialog(rootPane, message, "Nhập điểm tích lũy mới muốn dùng", JOptionPane.OK_CANCEL_OPTION);

                if (luaChon == JOptionPane.OK_OPTION) {
                    if (Integer.parseInt(jComboBox_DiemMoi.getSelectedItem().toString()) > (diemTichLuyHienTaiCuaKhachHang + diemTichLuyKhachDaDung)) {

                        JOptionPane.showMessageDialog(rootPane, "Không đủ điểm");
                    } else {
                        int diemTichLuyConLaiSauThayDoi = 0;
                        int tongTienMoi = 0;

                        diemTichLuyConLaiSauThayDoi = diemTichLuyHienTaiCuaKhachHang + diemTichLuyKhachDaDung
                                - Integer.parseInt(jComboBox_DiemMoi.getSelectedItem().toString());
                        tongTienMoi = tongTienGoc - tongTienGoc * Integer.parseInt(jComboBox_DiemMoi.getSelectedItem().toString()) / 1000;
                        System.out.println("Điểm tích lũy sau khi thay đổi số điểm dùng: " + diemTichLuyConLaiSauThayDoi);
                        int luaChonCapNhat = JOptionPane.showConfirmDialog(rootPane, "Điểm tích lũy sau thay đổi sẽ là: " + diemTichLuyConLaiSauThayDoi + "tổng tiền mới là: " + tongTienMoi, null, JOptionPane.OK_CANCEL_OPTION);
                        if (luaChonCapNhat == JOptionPane.OK_OPTION) {
                            connection.UpdateData.updateHoaDon(maHoaDon, tongTienMoi);
                            connection.UpdateData.updateDiemTichLuyKhachHang(sdtKhachHang, diemTichLuyConLaiSauThayDoi);
                            hienThongTinVaoBangHoaDon();
                            dtmVe.setRowCount(0);
                            for (Ve v : controller.Controller.arrayListVe) {
                                if (v.getMaHoaDon().equals(maHoaDon)) {
                                    if (v.getNgaySinh() != null) {
                                        dtmVe.addRow(new Object[]{
                                            v.getMaVe(), v.getMaChuyenBay(), v.getGia(), v.getKyGui(),
                                            v.getCmndNguoiBay(), v.getTenNguoiBay(), new SimpleDateFormat("dd/MM/yyyy").format(v.getNgaySinh()),
                                            v.getMaHoaDon(), v.getMaGhe()
                                        });
                                    } else {
                                        dtmVe.addRow(new Object[]{
                                            v.getMaVe(), v.getMaChuyenBay(), v.getGia(), v.getKyGui(),
                                            v.getCmndNguoiBay(), v.getTenNguoiBay(), "",
                                            v.getMaHoaDon(), v.getMaGhe()
                                        });
                                    }
                                }
                            }
                        }
                    }

                }
            }

        }
    }//GEN-LAST:event_jButton_SuaDiemTichLuyDaDungActionPerformed

    private void jButton_XoaHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_XoaHoaDonActionPerformed
        // TODO add your handling code here:
        int rowHoaDon = jTable_HoaDon.getSelectedRow();
        System.out.println("hàng " + rowHoaDon);

        if (rowHoaDon == -1) {
            jLabel_BaoLoi.setText("*Hãy chọn hóa đơn để xóa");
        } else {
            jLabel_BaoLoi.setText("");
            String maHoaDon = (String) jTable_HoaDon.getValueAt(rowHoaDon, 0);
            String sdtKhachHang = (String) jTable_HoaDon.getValueAt(rowHoaDon, 1);
            String maVe = "";
            int giaCoBan = 0;
            int soVePhoThong = 0;
            int soVeThuongGia = 0;
            new LoadData();
            int index = -1;

            byte trangThaiThanhToan = 0;
            // xem hoa don da thanh toan hay chua
            for (HoaDon hd : controller.Controller.arrayListHoaDon) {
                if (hd.getMaHoaDon().equals(maHoaDon)) {
                    trangThaiThanhToan = hd.getTrangThaiThanhToan();
                }
            }

            if (trangThaiThanhToan == 1) {
                jLabel_BaoLoi.setText("*Hóa đơn đã thanh toán, không thể xóa");
            } else {
                jLabel_BaoLoi.setText("");

                //lấy mã vé trong hóa đơn từ đó lấy ra mã chuyến bay
                for (Ve v : controller.Controller.arrayListVe) {
                    if (v.getMaHoaDon().equalsIgnoreCase(maHoaDon)) {
                        maVe = v.getMaVe();
                    }
                }
                // tính giá cơ bản
                for (Ve v : controller.Controller.arrayListVe) {
                    if (maVe.equals(v.getMaVe()) && v.getMaHoaDon().equals(maHoaDon)) {
                        for (ChuyenBay cb : controller.Controller.arrayListChuyenBay) {
                            if (v.getMaChuyenBay().equals(cb.getMaChuyenBay())) {
                                index = controller.Controller.arrayListChuyenBay.indexOf(cb);
                                giaCoBan = cb.getKhoangCach() * 500;
                                break;
                            }
                        }
                    }
                }

                //
                // tìm số ghế phổ thông, thương gia trong hóa đơn đã chọn
                for (Ve v : controller.Controller.arrayListVe) {
                    if (v.getMaHoaDon().equals(maHoaDon)) {
                        for (Ghe g : controller.Controller.arrayListChuyenBay.get(index).getArrayListGhe()) {
                            if (v.getMaGhe().equals(g.getMaGhe())) {
                                if (g.getLoaiGhe().equals("PhoThong")) {
                                    soVePhoThong++;
                                }
                                if (g.getLoaiGhe().equals("ThuongGia")) {
                                    soVeThuongGia++;
                                }
                            }
                        }
                    }
                }
                //
                //từ các bước trên suy ra được điểm đã dùng, giá gốc, giá sau khi dùng,...
                System.out.println("PhoThong" + soVePhoThong + "THuongGia" + soVeThuongGia);
                int tongTienThucTe = (int) jTable_HoaDon.getValueAt(rowHoaDon, 4);
                System.out.println("tong tien thuc te: " + tongTienThucTe);
                int tongTienGoc = soVePhoThong * giaCoBan + soVeThuongGia * giaCoBan * GiaoDienHoaDonMotChieu.phanTramGiaThuongGia;
                System.out.println("tong tien goc: " + tongTienGoc);
                int diemTichLuyKhachDaDung = (tongTienGoc * 1000 - tongTienThucTe * 1000) / tongTienGoc;
                System.out.println("diem da dung: " + diemTichLuyKhachDaDung);
                int diemTichLuyHienTaiCuaKhachHang = 0;
                // lấy điểm tích lũy hiện tại của khách hàng
                for (KhachHang kh : controller.Controller.arrayListKhachHang) {
                    if (sdtKhachHang.equals(kh.getSdtKhachHang())) {
                        diemTichLuyHienTaiCuaKhachHang = kh.getDiemTichLuy();
                        break;
                    }
                }

                System.out.println("diem còn lại của khách " + diemTichLuyHienTaiCuaKhachHang);
                int diemTichLuySauXoa = 0;

                diemTichLuySauXoa = diemTichLuyHienTaiCuaKhachHang + diemTichLuyKhachDaDung;
                System.out.println("Điểm tích lũy sau khi xóa hóa đơn: " + diemTichLuySauXoa);

                int luaChon = JOptionPane.showConfirmDialog(rootPane, "Xóa hóa đơn " + maHoaDon + " đã chọn?", "Xác nhận", JOptionPane.OK_CANCEL_OPTION);
                if (luaChon == JOptionPane.OK_OPTION) {
                    // cập nhật trạng thái ghế
                    for (Ve v : controller.Controller.arrayListVe) {
                        if (v.getMaHoaDon().equals(maHoaDon)) {
                            for (Ghe g : controller.Controller.arrayListChuyenBay.get(index).getArrayListGhe()) {
                                if (v.getMaGhe().equals(g.getMaGhe())) {

                                    connection.UpdateData.updateGhe(v.getMaGhe(), (byte) 1); // cập nhật các ghế có trong hóa đơn thành trống
                                }
                            }
                            connection.UpdateData.deleteVe(v.getMaVe(), maHoaDon); // xóa các vé có trong hóa đơn

                        }

                    }
                    if (connection.UpdateData.deleteHoaDon(maHoaDon)) {
                        if (connection.UpdateData.updateDiemTichLuyKhachHang(sdtKhachHang, diemTichLuySauXoa)) {
                            JOptionPane.showMessageDialog(rootPane, "Xóa hóa đơn thành công");
                        }
                    }
                    hienThongTinVaoBangHoaDon();
                    dtmVe.setRowCount(0);
                    for (Ve v : controller.Controller.arrayListVe) {
                        if (v.getMaHoaDon().equals(maHoaDon)) {
                            if (v.getNgaySinh() != null) {
                                dtmVe.addRow(new Object[]{
                                    v.getMaVe(), v.getMaChuyenBay(), v.getGia(), v.getKyGui(),
                                    v.getCmndNguoiBay(), v.getTenNguoiBay(), new SimpleDateFormat("dd/MM/yyyy").format(v.getNgaySinh()),
                                    v.getMaHoaDon(), v.getMaGhe()
                                });
                            } else {
                                dtmVe.addRow(new Object[]{
                                    v.getMaVe(), v.getMaChuyenBay(), v.getGia(), v.getKyGui(),
                                    v.getCmndNguoiBay(), v.getTenNguoiBay(), "",
                                    v.getMaHoaDon(), v.getMaGhe()
                                });
                            }
                        }
                    }
                }
            }

        }

    }//GEN-LAST:event_jButton_XoaHoaDonActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_SuaDiemTichLuyDaDung;
    private javax.swing.JButton jButton_ThoatGiaoDienXemLichSu;
    private javax.swing.JButton jButton_XoaHoaDon;
    private javax.swing.JButton jButton_XoaVe;
    private javax.swing.JLabel jLabel_AirLines;
    private javax.swing.JLabel jLabel_BaoLoi;
    private javax.swing.JLabel jLabel_HPT;
    private javax.swing.JLabel jLabel_HoaDon;
    private javax.swing.JLabel jLabel_IconMayBay;
    private javax.swing.JLabel jLabel_VeDaChon;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable_HoaDon;
    private javax.swing.JTable jTable_VeDaChon;
    // End of variables declaration//GEN-END:variables
}
